% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_multisite_data.R
\name{sim_multisite_data}
\alias{sim_multisite_data}
\title{Simulate a multi-site dataset with possible rank correlation between tau_j and se2_j}
\usage{
sim_multisite_data(
  true_dist = "Gaussian",
  J = 50,
  sigma_tau = 0.25,
  tau = 0,
  variance = 1,
  nu = NULL,
  slant = NULL,
  rho = NULL,
  delta = NULL,
  eps = NULL,
  ups = NULL,
  formula = NULL,
  beta = NULL,
  data = NULL,
  nj_mean = 10,
  cv = 0.3,
  nj_min = 5,
  p = 0.5,
  R2 = 0,
  precision_dependence = FALSE,
  rank_corr = 0.5,
  max_iter = 20000,
  tol = 0.01,
  set_seed = FALSE
)
}
\arguments{
\item{true_dist}{A character string specifying the type of distribution to use.
Options are \code{"Gaussian"}, \code{"T"}, \code{"Skew"}, \code{"ALD"}, or \code{"Mixture"}.}

\item{J}{A positive integer indicating the number of sites (default: 50). If \code{formula}
and \code{data} are provided, then \code{J} must match \code{nrow(data)}
(or be explicitly set to that).}

\item{sigma_tau}{A positive number to scale the generated treatment effects (default: 0.25).}

\item{tau}{A numeric value specifying an overall offset for the site means (default: 0).}

\item{variance}{A positive number specifying the baseline variance for the distribution (default: 1).}

\item{nu}{Degrees of freedom for the T distribution. Must be provided if \code{true_dist = "T"}.}

\item{slant}{A numeric value for the skew parameter in the Skew Normal distribution.
Must be provided if \code{true_dist = "Skew"}.}

\item{rho}{A numeric value for the parameter in the Asymmetric Laplace distribution (ALD).
Must be provided if \code{true_dist = "ALD"}.}

\item{delta}{A numeric value for the Mixture distribution (must be provided if \code{true_dist = "Mixture"}).}

\item{eps}{A numeric value (typically between 0 and 1) for the Mixture distribution.}

\item{ups}{A positive numeric value for the Mixture distribution.}

\item{formula}{An optional model formula describing how covariates in \code{data} should be used
to form the design matrix. For example, \code{~ X1 + X2} or \code{~ 0 + X1 + X2}.
If provided, you must also supply \code{beta} and \code{data}.}

\item{beta}{A numeric vector of regression coefficients corresponding to the columns of
\code{model.matrix(formula, data)}. If \code{formula} is provided,
\code{beta} must have length equal to \code{ncol(model.matrix(...))}.}

\item{data}{An optional data frame containing site-level covariates to be used in \code{formula}.
Must have \code{nrow(data) == J} if provided.}

\item{nj_mean}{Positive numeric. Desired truncated-gamma mean of site sizes.}

\item{cv}{Numeric >= 0. Coefficient of variation for the truncated Gamma.}

\item{nj_min}{Positive numeric. Lower bound for truncation (default 5).}

\item{p}{Numeric in (0,1). Proportion assigned to treatment (defaults to 0.5).}

\item{R2}{Numeric in [0,1). Proportion of variance explained by level-1 covariates
(defaults to 0.0).}

\item{precision_dependence}{Logical indicating whether to enforce a partial correlation
(default \code{FALSE}). If \code{FALSE}, we random-shuffle \code{se2_j} to break
any existing correlation (near-zero result).
If \code{TRUE}, we reorder \code{se2_j} to achieve \code{rank_corr}.}

\item{rank_corr}{Numeric in \eqn{[-1,1]}, the target Spearman rank correlation to achieve
between \eqn{\tau_j} and \eqn{\text{se2}_j} (default 0.50). Only used if
\code{precision_dependence = TRUE}.}

\item{max_iter}{Integer. Maximum number of swap attempts for the iterative
correlation injection (default 20000).}

\item{tol}{Numeric tolerance for stopping early if the current correlation is
within \code{tol} of \code{rank_corr} (default 0.01).}

\item{set_seed}{Logical (default \code{FALSE}). If \code{TRUE}, the function begins by
calling \code{set.seed(123)}, thus making the entire pipeline reproducible.}
}
\value{
A \strong{tibble} with \code{J} rows, containing site index, (optional) covariates,
the true effects \code{tau_j}, the sampling variance \code{se2_j}, the observed
\code{tau_j_hat}, and \code{corr_est}.
}
\description{
This function:
\enumerate{
\item Calls \code{\link{gen_priorG2}} to generate \code{J} site-level "true" effects (including
\code{site_index} and possibly covariates).
\item Calls \code{\link{sim_sitesize_withinvar}} to generate \code{se2_j} for each site.
\item Calls \code{\link{sim_observed_effects}}, which \emph{may} reorder \code{se2_j}
internally to achieve the target Spearman rank correlation with \code{tau_j}.
The function then merges these results back into the final data frame, leaving
\code{tau_j} and covariates in their original row order.
}
}
\details{
The returned data frame has columns:
\itemize{
\item \strong{\code{site_index}} (unique ID for each site).
\item \emph{covariates}, if a formula/data were used in \code{\link{gen_priorG2}}.
\item \strong{\code{tau_j}}, the true site effect from \code{gen_priorG2}.
\item \strong{\code{se2_j}}, the (possibly permuted) sampling variance.
\item \strong{\code{tau_j_hat}}, the observed site effect, drawn from \(\mathrm{N}(\tau_j, se2_j)\).
\item \strong{\code{corr_est}}, the final Spearman rank correlation between \code{tau_j}
and \code{se2_j}.
}

\subsection{Reordering of \eqn{se_j^2} for partial correlation}{
If \code{precision_dependence = TRUE}, \code{\link{sim_observed_effects}} reassigns the
\(\mathrm{se2}_j\) values among the sites (in an internal permutation) to achieve the
specified \code{rank_corr} with \(\tau_j\).  \strong{However,} we do \emph{not} reorder
\(\tau_j\) or any covariates. That means, effectively, site \(i\) keeps its row and
\(\tau_j\link{i}\) but might receive a different \(\mathrm{se2}_j\). This allows us to produce
a rank correlation between the unaltered \(\tau_j\) and a re-labeled vector of \(\mathrm{se2}_j\),
while leaving covariates matched to the same row index.
}
}
\examples{
\dontrun{
##################################################
# Example 1: No covariates, partial correlation
##################################################
df_no_cov <- sim_multisite_data(
  true_dist  = "Gaussian",
  J          = 10,
  sigma_tau  = 0.25,
  variance   = 1,
  # site size generator:
  nj_mean    = 20,
  cv         = 0.3,
  # enforce correlation ~ 0.4
  precision_dependence = TRUE,
  rank_corr  = 0.4,
  set_seed   = TRUE
)
head(df_no_cov)

cor(df_no_cov$tau_j, df_no_cov$se2_j, method="spearman")  # near 0.4

##################################################
# Example 2: Covariates, binomial random X1,X2,X3
##################################################
J <- 100
p1 <- 0.5
p2 <- 0.3
p3 <- 0.7

X1 <- rbinom(J, size=1, prob=p1)
X2 <- rbinom(J, size=1, prob=p2)
X3 <- rbinom(J, size=1, prob=p3)

site_data <- data.frame(X1 = X1, X2 = X2, X3 = X3)

# formula => ~ X1 + X2 + X3 includes an intercept => total 4 columns
beta_vec <- c(2, 1.5, -1, 0.5)

df_with_cov <- sim_multisite_data(
  true_dist = "Gaussian",
  J         = J,
  sigma_tau = 0.25,
  variance  = 1,
  formula   = ~ X1 + X2 + X3,
  beta      = beta_vec,
  data      = site_data,

  nj_mean   = 20,
  cv        = 0.5,

  precision_dependence = TRUE,
  rank_corr = 0.3,

  set_seed = TRUE
)
head(df_with_cov)

cor(df_with_cov$tau_j, df_with_cov$se2_j, method="spearman")  # near 0.3
}

}
